name: CI Workflow
description: 'Shared CI workflow.'

runs:
  using: composite
  steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda #v4.1.0

    - name: Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: '23'
        cache: 'pnpm'

    - name: Install Dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Lint
      shell: bash
      run: pnpm lint

    - name: Prettier
      shell: bash
      run: pnpm format:ci

    - name: Build Library
      shell: bash
      id: build
      run: pnpm build

    - name: Build Demo App
      shell: bash
      run: pnpm demo:build
      env:
        VITE_LD_CLIENT_SIDE_ID: 68e6a6a8d57c6b098d135c94
        VITE_LD_BASE_URL: https://app.launchdarkly.com
        VITE_LD_STREAM_URL: https://clientstream.launchdarkly.com
        VITE_LD_EVENTS_URL: https://events.launchdarkly.com
        VITE_LD_DEV_SERVER_URL: http://localhost:8765
        VITE_LD_DEV_SERVER_PROJECT_KEY: developer-toolbar-sandbox

    - name: Run Unit Tests
      shell: bash
      run: pnpm test

    - name: Get Playwright Version
      shell: bash
      id: playwright-version
      run: |
        VERSION=$(pnpm list @playwright/test --depth=0 | grep '@playwright/test' | awk '{print $2}')
        if [ -z "$VERSION" ]; then
          VERSION=$(node -e "console.log(require('./node_modules/@playwright/test/package.json').version)")
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected Playwright version: $VERSION"

    - name: Cache Playwright Browsers
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}
        restore-keys: |
          playwright-${{ runner.os }}-

    - name: Install Playwright Browsers
      shell: bash
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: pnpm exec playwright install --with-deps chromium

    - name: Cache Storybook Build
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      id: storybook-cache
      with:
        path: packages/toolbar/storybook-static
        key: storybook-${{ runner.os }}-${{ hashFiles('packages/toolbar/src/**/*', 'packages/toolbar/stories/**/*', 'packages/toolbar/.storybook/**/*', 'packages/toolbar/package.json', 'pnpm-lock.yaml') }}
        restore-keys: |
          storybook-${{ runner.os }}-

    - name: Build Storybook
      shell: bash
      if: steps.storybook-cache.outputs.cache-hit != 'true'
      run: pnpm --filter @launchdarkly/toolbar build:storybook

    - name: Run Playwright Tests
      shell: bash
      id: playwright
      run: pnpm test:e2e:ci
      env:
        VITE_LD_CLIENT_SIDE_ID: 68e6a6a8d57c6b098d135c94
        VITE_LD_BASE_URL: https://app.launchdarkly.com
        VITE_LD_STREAM_URL: https://clientstream.launchdarkly.com
        VITE_LD_EVENTS_URL: https://events.launchdarkly.com
        VITE_LD_DEV_SERVER_URL: http://localhost:8765
        VITE_LD_DEV_SERVER_PROJECT_KEY: developer-toolbar-sandbox

    - name: Upload Playwright Artifacts
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      if: always()
      with:
        name: playwright-artifacts-${{ runner.os }}
        path: |
          e2e/test-results/
          e2e/playwright-report/
        retention-days: 7
