.CodeEditor .CodeMirror {
  display: block;
  width: 100%;
  height: auto;
  padding: 0.375rem 0.75rem;
  font-size: var(--lp-font-size-200);
  font-family: var(--lp-font-family-monospace);
  line-height: var(--lp-line-height-200);
  background-color: var(--lp-color-bg-ui-primary);
  color: var(--lp-color-text-ui-primary-base);
  border: 1px solid var(--lp-color-border-field-base);
  border-radius: var(--lp-border-radius-regular);
  transition: all 100ms linear;
}

.CodeEditor .CodeMirror-focused {
  outline: 0;
  border-color: var(--lp-color-blue-500);
  box-shadow: 0 0 0 3px hsl(231.5, 100%, 62.5%, 0.1);
}

.CodeMirror-activeline-background {
  background-color: var(--lp-color-bg-ui-secondary);
}

.CodeEditor.CodeEditor--readonly .CodeMirror,
.CodeEditor.CodeEditor--readonly .CodeMirror-focused {
  box-shadow: none;
  border-color: var(--lp-color-gray-500);
}

.is-invalid .CodeMirror {
  border-color: var(--lp-color-text-feedback-error);
}

.CodeEditor .CodeMirror-line {
  line-height: var(--lp-line-height-300);
}

.CodeEditor-textarea {
  font-size: var(--lp-font-size-200);
  font-family: var(--lp-font-family-monospace);
  min-height: 200px;
  width: 100%;
}

.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
  word-break: break-word;
  overflow-wrap: break-word;
}

[data-theme='dark'] {
  .CodeEditor .CodeMirror {
    .cm-string {
      color: #eab281;
    }

    .cm-number {
      color: #e3a2ff;
    }
  }
}

:root[data-type-refresh] {
  .CodeEditor .CodeMirror {
    font: var(--lp-text-code-1-regular);
  }

  .CodeEditor-textarea {
    font: var(--lp-text-code-1-regular);
  }
}

.CodeEditor-preview {
  background-color: var(--lp-color-bg-ui-primary);
  border: 1px solid var(--lp-color-border-field-base);
  border-radius: var(--lp-border-radius-regular);
  padding: 0.75rem;
}
